'use strict';
/*
Метод reduce() применяет функцию к аккумулятору и каждому значению массива (слева-направо), сводя его к одному значению.

arr.reduce(callback[, initialValue])

callback - Функция, выполняющаяся для каждого элемента массива, принимает четыре аргумента:
  1) accumulator - Аккумулятор, аккумулирующий значение, которое возвращает функция callback после посещения очередного элемента,
    либо значение initialValue, если оно предоставлено.
  2) currentValue - Текущий обрабатываемый элемент массива.
  3) index - Индекс текущего обрабатываемого элемента массива.
  4) array - Массив, для которого была вызвана функция reduce.
initialValue - Необязательный параметр: объект, используемый в качестве первого аргумента при первом вызове функции callback.

При первом вызове функции, параметры accumulator и currentValue могут принимать одно из двух значений:
а) если при вызове reduce() передан аргумент initialValue, то значение accumulator будет равным значению initialValue,
а значение currentValue будет равным первому значению в массиве;
б) если аргумент initialValue не задан, то значение accumulator будет равным первому значению в массиве, а значение currentValue будет равным второму значению в массиве.

Если массив пустой и аргумент initialValue не указан, будет брошено исключение TypeError.
Если массив состоит только из одного элемента (независимо от его положения в массиве) и аргумент initialValue не указан,
или если аргумент initialValue указан, но массив пустой, то будет возвращено это единственное значение, без вызова функции callback.
*/

const orders = [
  { id: 1, amount: 200 },
  { id: 2, amount: 100 },
  { id: 3, amount: 250 },
  { id: 4, amount: 90 },
];

let totalAmount = orders.reduce((total, order) => {
  console.log(total, order); // выведем в консоль для наглядности изменения переменных на каждой итерации
  return total + order.amount;
}, 0);

// лаконичная запись будет выглядеть так: let totalAmount = orders.reduce((total, order) => return total + order.amount, 0);

console.log(totalAmount); // 640